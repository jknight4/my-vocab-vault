package xyz.knightj.my_vocab_vault.persistence.repositoriesimport org.springframework.data.jpa.repository.Queryimport org.springframework.data.repository.CrudRepositoryimport org.springframework.data.repository.query.Paramimport org.springframework.stereotype.Repositoryimport xyz.knightj.my_vocab_vault.persistence.entities.WordEntityimport xyz.knightj.my_vocab_vault.persistence.entities.WordEntityKey@Repositoryinterface WordRepository : CrudRepository<WordEntity, WordEntityKey> {    @Query("SELECT w from WordEntity w " +            "LEFT JOIN FETCH w.meanings "  +            "LEFT JOIN FETCH w.tags " +            "WHERE w.wordId.userId = :userId")    fun findByUserIdWithDetails(@Param("userId") userId: String): List<WordEntity>?    @Query("SELECT w FROM WordEntity w " +            "LEFT JOIN FETCH w.meanings " +            "LEFT JOIN FETCH w.tags " +            "WHERE w.wordId.userId = :userId " +            "AND w.wordId.wordName = :wordName")    fun findWordWithDetails(@Param("userId") userId: String,                            @Param("wordName") wordName: String): WordEntity?}