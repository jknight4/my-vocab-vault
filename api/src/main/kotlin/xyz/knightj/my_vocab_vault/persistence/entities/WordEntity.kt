package xyz.knightj.my_vocab_vault.persistence.entitiesimport jakarta.annotation.Nullableimport jakarta.persistence.*import java.io.Serializableimport java.util.*@Entity@Table(name = "words")class WordEntity : Serializable {    @EmbeddedId    var wordId: WordEntityKey? = null    @OneToMany(mappedBy = "word", cascade = [CascadeType.ALL], orphanRemoval = true)    var meanings: List<MeaningEntity> = ArrayList()    @get:Nullable    @ElementCollection    @Nullable    var tags: Set<String>? = null    @get:Nullable    @Nullable    var createdAt: String? = null    @get:Nullable    @Nullable    var updatedAt: String? = null    constructor()    constructor(        wordId: WordEntityKey?,        meanings: List<MeaningEntity>,        @Nullable tags: Set<String>?,        @Nullable createdAt: String?,        @Nullable updatedAt: String?    ) {        this.wordId = wordId        this.meanings = meanings        this.tags = tags        this.createdAt = createdAt        this.updatedAt = updatedAt    }    override fun equals(o: Any?): Boolean {        if (this === o) return true        return if (o !is WordEntity) false else wordId == o.wordId && meanings == o.meanings && tags == o.tags && createdAt == o.createdAt && updatedAt == o.updatedAt    }    override fun hashCode(): Int {        return Objects.hash(wordId, meanings, tags, createdAt, updatedAt)    }}