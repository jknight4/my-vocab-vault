package xyz.knightj.my_vocab_vault.serviceimport org.springframework.stereotype.Serviceimport xyz.knightj.my_vocab_vault.models.Meaningimport xyz.knightj.my_vocab_vault.models.WordDetailsimport xyz.knightj.my_vocab_vault.models.WordRequestDataimport xyz.knightj.my_vocab_vault.persistence.WordManagementClientimport java.time.Instantimport java.util.UUID@Serviceclass WordManagementService(private val wordManagementClient: WordManagementClient) {    fun findAllWords(userId: String): List<WordDetails> {        val wordDetails: List<WordDetails> = wordManagementClient.findAllWords(userId)       return wordDetails.groupBy { it.word }            .map { (_, wordList) ->                val allMeanings = wordList.flatMap { it.meanings }                wordList.first().copy(meanings = allMeanings.toMutableList())            }    }    fun findByWord(userId: String, wordName: String): WordDetails {        val wordDetails: List<WordDetails> = wordManagementClient.findByWord(userId, wordName)        val allMeanings = wordDetails.flatMap { it.meanings }        return wordDetails.first().copy(meanings = allMeanings.toMutableList())    }    fun saveWord(userId: String, wordData: WordRequestData) {        wordManagementClient.saveWord(userId, wordData)    }}