package xyz.knightj.my_vocab_vault.serviceimport org.springframework.stereotype.Serviceimport xyz.knightj.my_vocab_vault.models.UpdateWordRequestDataimport xyz.knightj.my_vocab_vault.models.WordDetailsimport xyz.knightj.my_vocab_vault.models.WordRequestDataimport xyz.knightj.my_vocab_vault.persistence.WordManagementClientimport java.time.Instant@Serviceclass WordManagementService(private val wordManagementClient: WordManagementClient) {    fun findAllWords(userId: String): List<WordDetails> {        return wordManagementClient.findAllWords(userId)    }    fun findWord(userId: String, wordName: String): WordDetails? {       return wordManagementClient.findWord(userId, wordName)    }    fun saveWord(userId: String, wordData: WordRequestData) {        wordManagementClient.saveNewWord(userId, wordData)    }    fun deleteWord(userId: String, wordName: String){        wordManagementClient.deleteWord(userId, wordName)    }    fun editTags(userId: String, wordName: String, tags: Set<String>){        println("Hello 123")        wordManagementClient.editTags(userId, wordName, tags)    }//    fun updateWord(userId: String, wordName: String, updatedWordData: UpdateWordRequestData): WordDetails? {//        val currentWord = findWord(userId, wordName) ?: return null //TODO throw error////        currentWord.updatedAt = Instant.now().toString()////        currentWord.meanings.clear()//        currentWord.meanings.addAll(updatedWordData.meanings ?: emptyList())////////    }}