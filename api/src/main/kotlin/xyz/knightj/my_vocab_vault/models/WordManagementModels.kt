package xyz.knightj.my_vocab_vault.modelsimport com.fasterxml.jackson.annotation.JsonIncludeimport jakarta.persistence.*enum class PartsOfSpeech {    NOUN,    PRONOUN,    VERB,    ADJECTIVE,    ADVERB,    PREPOSITION,    CONJUNCTION,    INTERJECTION}data class WordDetails(val word: String,                       val meanings: MutableList<MeaningDetails>)data class MeaningDetails(val id: String, val partsOfSpeech: PartsOfSpeech,    val definition: String, val examples: MutableList<String>?)data class WordRequestData(val word: String,                    val partsOfSpeech: String,                    val definition: String,                    val examples: MutableList<String>?)@Table(name = "words")@Entitydata class Word(    @Id    val id: String = "",    val userId: String = "",    val wordName: String = "",    val createdAt: String? = null,    val updatedAt: String? = null,////    @OneToMany(mappedBy = "word", cascade = [CascadeType.ALL], fetch = FetchType.LAZY)//    val meanings: List<Meaning> = emptyList())@Table(name = "meanings")@Entitydata class Meaning(    @Id    val id: String = "",//    @ManyToOne(fetch = FetchType.LAZY)//    @JoinColumn(name = "wordId", referencedColumnName = "id")    val wordId: String = "",    val partsOfSpeech: String = "",    val definition: String = "",    val examples: MutableList<String>? = mutableListOf(),    val createdAt: String? = null,    val updatedAt: String? = null,)